= Debmake documentation source

All files included in this source tree are under the MIT license with its text
in the LICENSE file except for the files which explicitly claim differently in
them.

If DEBUG is set, this source build requires 2 steps.
 $ export DEBUG=1
 $ make pkg
 $ make css html

If you are checking English and translated contents, this saves time since
updating English source or PO requires you to do only
 $ make css html
to check their goodness when rebuilding.  (Long package example build results
are kept and reused.)

== po

This directory contain po files for translator.

In order to keep the translation in sync with the English, po/pot files are
generated in the way not to contain <screen> contents and url attribute of
<ulink>.

This is done by the itstool (not po4a).

== debian-template/

This directory contains a set of template files used to be copied to debian/*
files of many examples of the packaged source tree.

The changelog file is for the latest version of the package example which is
split up properly for each version and copied accordingly.

== debhello-<version>/

Each of these contains an entire set of an example source tree with properly
packaged debian/* files.

The upstream tarball used in the packaging example are generated by the tar
command while excluding the debian/ directory.

== debhello-<version>-pkg<revision>/

These are used to generate the packaging process example.

These contain step<number>.cmd files which are executed sequentially and the
results are logged to the step<number>.raw files.

Since the step<number>.raw files are terminated by <CR><LF>, may contain
<TAB>, and may be too long, the filtered step<number>.log files are generated.

The <revision> is usually 1 and it matches the Debian revison of the binary
packages generated.

== .stamp

The existence of .stamp file in each directory indicates all the files in the
directory has been generated via Makefile and up-to-date.  This is not
committed to the VCS.

== asciidoc/

This contain the source text files written in the asciidoc markup. Their
extenstion is usually .txt .


// vim:se tw=78 sts=4 ts=4 et ai:
